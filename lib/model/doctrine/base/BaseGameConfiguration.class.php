<?php

/**
 * BaseGameConfiguration
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $class_to_use
 * @property clob $configurations_steps
 * @property Doctrine_Collection $Games
 * 
 * @method string              getTitle()                Returns the current record's "title" value
 * @method string              getClassToUse()           Returns the current record's "class_to_use" value
 * @method clob                getConfigurationsSteps()  Returns the current record's "configurations_steps" value
 * @method Doctrine_Collection getGames()                Returns the current record's "Games" collection
 * @method GameConfiguration   setTitle()                Sets the current record's "title" value
 * @method GameConfiguration   setClassToUse()           Sets the current record's "class_to_use" value
 * @method GameConfiguration   setConfigurationsSteps()  Sets the current record's "configurations_steps" value
 * @method GameConfiguration   setGames()                Sets the current record's "Games" collection
 * 
 * @package    game_notifier
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGameConfiguration extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('game_configuration');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('class_to_use', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('configurations_steps', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Game as Games', array(
             'local' => 'id',
             'foreign' => 'game_configuration_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}